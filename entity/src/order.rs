//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use super::sea_orm_active_enums::Dir;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "order")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub seq: i64,
    pub code: String,
    pub dir: Dir,
    #[sea_orm(column_type = "Decimal(Some((1000, 2)))")]
    pub price: Decimal,
    pub quantity: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::req::Entity",
        from = "Column::Seq",
        to = "super::req::Column::Seq",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Req,
    #[sea_orm(
        belongs_to = "super::security::Entity",
        from = "Column::Code",
        to = "super::security::Column::Code",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Security,
}

impl Related<super::req::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Req.def()
    }
}

impl Related<super::security::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Security.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
